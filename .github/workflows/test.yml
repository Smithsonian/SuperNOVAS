name: Test
permissions:
  contents: read
  pull-requests: write

on: 
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'include/**'
      - 'test/src/**'
      - 'test/reference/**'
      - 'Makefile'
      - '*.mk'
      - 'test/Makefile'
      - '.github/workflows/test.yml'

  pull_request:
    paths:
      - 'src/**'
      - 'include/**'
      - 'test/src/**'
      - 'test/reference/**'
      - 'Makefile'
      - '*.mk'
      - 'test/Makefile'
      - '.github/workflows/test.yml'

jobs:

  test:
    name: Test and coverage

    runs-on: ubuntu-latest
    env:
      CC: gcc
      CFLAGS: -O0
    steps:

    - uses: actions/checkout@v5

    - name: install dependencies
      run: |
        sudo apt-get update -q -y 
        sudo apt-get install -y lcov

    - name: Run regression tests
      run: make test

    - name: Generate coverage data
      run: make coverage

    - name: Upload coverage to Codecov.io
      uses: codecov/codecov-action@v5
      continue-on-error: true
      with:
        fail_ci_if_error: false
        flags: unittests
        name: codecov
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

    - name: Upload coverage to Coveralls.io
      continue-on-error: true
      uses: coverallsapp/github-action@v2


  test-linux:
    name: Linux ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: armv7
            distro: ubuntu_latest
          - arch: aarch64
            distro: ubuntu_latest
          - arch: riscv64
            distro: ubuntu_latest
          - arch: s390x
            distro: ubuntu_latest
          - arch: ppc64le
            distro: ubuntu_latest
    steps:
      - uses: actions/checkout@v5
      - uses: uraimo/run-on-arch-action@v3
        name: Run regression tests
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          install: |
            apt-get update -q -y
            apt-get install -q -y make gcc gfortran
          run: make test

  test-macos:
    name: Test on MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build and test on macOS
        run: make test

  test-cmake:
    name: Test with CMake (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
#      - name: Install libcalceph-dev
#        run: |
#           sudo apt-get update -q -y
#           sudo apt-get install -y libcalceph-dev
        
      - name: Build
        run: |
          cmake -B build -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=ON -DBUILD_EXAMPLES=ON
          cmake --build build
          
      - name: Test
        run: ctest --test-dir build
